Script started on 2023-02-16 13:05:02-05:00 [TERM="xterm-256color" TTY="/dev/pts/11" COLUMNS="156" LINES="15"]
]0;patelhr4@wolf:/h/u6/c1/00/patelhr4/patelhr4/lab6wolf:~/patelhr4/lab6$ gdb overflow
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04.1) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
[m--Type <RET> for more, q to quit, c to continue without paging--list 20
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32moverflow[m...
(gdb) list 20
15              printf("%lx -> &after[%d]\n", (unsigned long) &after[index], index);
16          }
17          for (index = 0; index < SIZE; index++) {
18              printf("%lx -> &a[%d]\n", (unsigned long) &a[index], index);
19          }
20          for (index = 0; index < SIZE; index++) {
21              printf("%lx -> &before[%d]\n", (unsigned long) &before[index], index);
22          }
23          printf("%lx -> &i\n", (unsigned long)&i);
24          printf("%lx -> &index\n", (unsigned long)&index);
(gdb) list 30
25          printf("\n");
26      
27      
28          printf("Initial values:\n");
29          printf("i = %d\n", i);
30          printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
31          printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
32          printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
33          printf("\n");
34      
(gdb) list 50[K[K40
35      
36          for (i = 0; i < OVERFLOW; i++) {
37              a[i] = i * 10;
38              printf("i = %d\n", i);
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
42          }
43      
44          return 0;
(gdb) brek [K[Kak 36
Breakpoint 1 at [34m0x13cc[m: file [32moverflow.c[m, line 36.
(gdb) break 34
Note: breakpoint 1 also set at pc [34m0x13cc[m.
Breakpoint 2 at [34m0x13cc[m: file [32moverflow.c[m, line 36.
(gdb) u[Krun
Starting program: /h/u6/c1/00/patelhr4/patelhr4/lab6/overflow 
Address of the variables:
7fffffffe930 -> &after[0]
7fffffffe934 -> &after[1]
7fffffffe938 -> &after[2]
7fffffffe93c -> &after[3]
7fffffffe920 -> &a[0]
7fffffffe924 -> &a[1]
7fffffffe928 -> &a[2]
7fffffffe92c -> &a[3]
7fffffffe910 -> &before[0]
7fffffffe914 -> &before[1]
7fffffffe918 -> &before[2]
7fffffffe91c -> &before[3]
7fffffffe90c -> &i
7fffffffe908 -> &index

Initial values:
i = 32767
before = {10, 10, 10, 10}
a = {0, 0, 0, 0}
after = {10, 10, 10, 10}


Breakpoint 1, [33mmain[m () at [32moverflow.c[m:36
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) continue
Continuing.
i = 0
before = {10, 10, 10, 10}
a = {0, 0, 0, 0}
after = {10, 10, 10, 10}
i = 1
before = {10, 10, 10, 10}
a = {0, 10, 0, 0}
after = {10, 10, 10, 10}
i = 2
before = {10, 10, 10, 10}
a = {0, 10, 20, 0}
after = {10, 10, 10, 10}
i = 3
before = {10, 10, 10, 10}
a = {0, 10, 20, 30}
after = {10, 10, 10, 10}
i = 4
before = {10, 10, 10, 10}
a = {0, 10, 20, 30}
after = {40, 10, 10, 10}
[Inferior 1 (process 50504) exited normally]
(gdb) run
Starting program: /h/u6/c1/00/patelhr4/patelhr4/lab6/overflow 
Address of the variables:
7fffffffe930 -> &after[0]
7fffffffe934 -> &after[1]
7fffffffe938 -> &after[2]
7fffffffe93c -> &after[3]
7fffffffe920 -> &a[0]
7fffffffe924 -> &a[1]
7fffffffe928 -> &a[2]
7fffffffe92c -> &a[3]
7fffffffe910 -> &before[0]
7fffffffe914 -> &before[1]
7fffffffe918 -> &before[2]
7fffffffe91c -> &before[3]
7fffffffe90c -> &i
7fffffffe908 -> &index

Initial values:
i = 32767
before = {10, 10, 10, 10}
a = {0, 0, 0, 0}
after = {10, 10, 10, 10}


Breakpoint 1, [33mmain[m () at [32moverflow.c[m:36
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) next
37              a[i] = i * 10;
(gdb) display a
1: a = {0, 0, 0, 0}
(gdb) s[Kdisplay afe[Kter
2: after = {10, 10, 10, 10}
(gdb) next
38              printf("i = %d\n", i);
1: a = {0, 0, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) next
i = 0
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
1: a = {0, 0, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) next
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
1: a = {0, 0, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) next
a = {0, 0, 0, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
1: a = {0, 0, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) next
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
1: a = {0, 0, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) next
37              a[i] = i * 10;
1: a = {0, 0, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) continue[K[K[K[K[K[K[K[Knext
38              printf("i = %d\n", i);
1: a = {0, 10, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) next
i = 1
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
1: a = {0, 10, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) next
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
1: a = {0, 10, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) next
a = {0, 10, 0, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
1: a = {0, 10, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) next
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
1: a = {0, 10, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) next
37              a[i] = i * 10;
1: a = {0, 10, 0, 0}
2: after = {10, 10, 10, 10}
(gdb) next
38              printf("i = %d\n", i);
1: a = {0, 10, 20, 0}
2: after = {10, 10, 10, 10}
(gdb) next
i = 2
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
1: a = {0, 10, 20, 0}
2: after = {10, 10, 10, 10}
(gdb) next
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
1: a = {0, 10, 20, 0}
2: after = {10, 10, 10, 10}
(gdb) next
a = {0, 10, 20, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
1: a = {0, 10, 20, 0}
2: after = {10, 10, 10, 10}
(gdb) next
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
1: a = {0, 10, 20, 0}
2: after = {10, 10, 10, 10}
(gdb) next
37              a[i] = i * 10;
1: a = {0, 10, 20, 0}
2: after = {10, 10, 10, 10}
(gdb) next
38              printf("i = %d\n", i);
1: a = {0, 10, 20, 30}
2: after = {10, 10, 10, 10}
(gdb) next
i = 3
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
1: a = {0, 10, 20, 30}
2: after = {10, 10, 10, 10}
(gdb) nexxt
Undefined command: "nexxt".  Try "help".
(gdb) next
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
1: a = {0, 10, 20, 30}
2: after = {10, 10, 10, 10}
(gdb) next
a = {0, 10, 20, 30}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
1: a = {0, 10, 20, 30}
2: after = {10, 10, 10, 10}
(gdb) next
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
1: a = {0, 10, 20, 30}
2: after = {10, 10, 10, 10}
(gdb) next
37              a[i] = i * 10;
1: a = {0, 10, 20, 30}
2: after = {10, 10, 10, 10}
(gdb) next
38              printf("i = %d\n", i);
1: a = {0, 10, 20, 30}
2: after = {40, 10, 10, 10}
(gdb) print(&after[0])
$1 = (int *) [34m0x7fffffffe930[m
(gdb) print(&after[0])[K[K[K[K[K[K[K[K[K[K&a[0][K[K4])
$2 = (int *) [34m0x7fffffffe930[m
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) quit
A debugging session is active.

        Inferior 1 [process 50566] will be killed.

Quit anyway? (y or n) y
]0;patelhr4@wolf:/h/u6/c1/00/patelhr4/patelhr4/lab6wolf:~/patelhr4/lab6$ exit
exit

Script done on 2023-02-16 13:08:11-05:00 [COMMAND_EXIT_CODE="0"]
